{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"../../services/blockchain.service\";\nimport * as i3 from \"../../services/candidate.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../components/navbar/navbar.component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../components/admin-panel/admin-panel.component\";\nimport * as i9 from \"../../components/transactions-table/transactions-table.component\";\nimport * as i10 from \"../../components/block-view/block-view.component\";\n\nfunction BlockchainViewerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-admin-panel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BlockchainViewerComponent_div_3_table_6_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 9);\n    i0.ɵɵlistener(\"click\", function BlockchainViewerComponent_div_3_table_6_tr_8_Template_td_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const c_r7 = restoredCtx.$implicit;\n      i0.ɵɵnextContext(2);\n\n      const _r4 = i0.ɵɵreference(18);\n\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.open(_r4, c_r7.name);\n    });\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵtext(6, \"Vote\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r7 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(c_r7.name);\n  }\n}\n\nfunction BlockchainViewerComponent_div_3_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\", 7);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 7);\n    i0.ɵɵtext(6, \"Vote\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, BlockchainViewerComponent_div_3_table_6_tr_8_Template, 7, 1, \"tr\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.candidates);\n  }\n}\n\nfunction BlockchainViewerComponent_div_3_app_block_view_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-block-view\", 11);\n    i0.ɵɵlistener(\"click\", function BlockchainViewerComponent_div_3_app_block_view_11_Template_app_block_view_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const block_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.showTransactions(block_r10);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const block_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"block\", block_r10);\n  }\n}\n\nfunction BlockchainViewerComponent_div_3_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelementStart(1, \"h4\", 13);\n    i0.ɵɵtext(2, \"Confirm vote\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function BlockchainViewerComponent_div_3_ng_template_17_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const modal_r13 = restoredCtx.$implicit;\n      return modal_r13.dismiss(\"Cross click\");\n    });\n    i0.ɵɵelementStart(4, \"span\", 15);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 16);\n    i0.ɵɵelementStart(7, \"div\", 17);\n    i0.ɵɵtext(8, \" Are you sure you want to confirm your vote for \");\n    i0.ɵɵelementStart(9, \"strong\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \" ? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 18);\n    i0.ɵɵelementStart(13, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function BlockchainViewerComponent_div_3_ng_template_17_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.saveVote();\n    });\n    i0.ɵɵtext(14, \"Confirm\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r5.candidateName);\n  }\n}\n\nfunction BlockchainViewerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵtext(3, \"User Panel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Please select your vote. The active candidates are:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, BlockchainViewerComponent_div_3_table_6_Template, 9, 1, \"table\", 2);\n    i0.ɵɵelementStart(7, \"h5\");\n    i0.ɵɵtext(8, \"Blocks in the e-voting system\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10, \"When your voting is successful, your vote will be added as a new block in the e-voting system.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, BlockchainViewerComponent_div_3_app_block_view_11_Template, 1, 1, \"app-block-view\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"div\", 1);\n    i0.ɵɵelementStart(14, \"h5\");\n    i0.ɵɵtext(15, \"Transactions inside block \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"app-transactions-table\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, BlockchainViewerComponent_div_3_ng_template_17_Template, 15, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.candidates.length > 0);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.blocks);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"transactions\", ctx_r1.selectedBlock.transactions);\n  }\n}\n\nexport class BlockchainViewerComponent {\n  constructor(userService, blockchainService, candidateService, modalService, router) {\n    this.userService = userService;\n    this.blockchainService = blockchainService;\n    this.candidateService = candidateService;\n    this.modalService = modalService;\n    this.router = router;\n    this.candidates = [];\n    this.selectedBlock = null;\n    this.user$ = this.userService.findLoggedInUser();\n    this.blocks = this.blockchainService.getBlocks();\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n\n  ngOnInit() {\n    this.selectedBlock = this.blocks[0];\n  }\n\n  showTransactions(block) {\n    this.selectedBlock = block;\n  }\n\n  open(content, name) {\n    this.candidateName = name;\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {});\n  }\n\n  saveVote() {\n    this.router.navigate(['/new/transaction'], {\n      queryParams: {\n        candidate: this.candidateName\n      }\n    });\n    this.close();\n  }\n\n  close() {\n    this.modalService.dismissAll();\n  }\n\n}\n\nBlockchainViewerComponent.ɵfac = function BlockchainViewerComponent_Factory(t) {\n  return new (t || BlockchainViewerComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.BlockchainService), i0.ɵɵdirectiveInject(i3.CandidateService), i0.ɵɵdirectiveInject(i4.NgbModal), i0.ɵɵdirectiveInject(i5.Router));\n};\n\nBlockchainViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BlockchainViewerComponent,\n  selectors: [[\"app-blockchain-viewer\"]],\n  decls: 5,\n  vars: 6,\n  consts: [[4, \"ngIf\"], [1, \"container\"], [\"class\", \"table table-hover table-striped\", 4, \"ngIf\"], [3, \"block\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"transactions\"], [\"mymodal\", \"\"], [1, \"table\", \"table-hover\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"link\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"mt-2\", \"mb-2\"], [3, \"block\", \"click\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", \"data-bs-dismiss\", \"modal\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"]],\n  template: function BlockchainViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\");\n      i0.ɵɵtemplate(1, BlockchainViewerComponent_div_1_Template, 2, 0, \"div\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵtemplate(3, BlockchainViewerComponent_div_3_Template, 19, 3, \"div\", 0);\n      i0.ɵɵpipe(4, \"async\");\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      let tmp_1_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = i0.ɵɵpipeBind1(2, 2, ctx.user$)) == null ? null : tmp_0_0.adminOrUser);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !((tmp_1_0 = i0.ɵɵpipeBind1(4, 4, ctx.user$)) == null ? null : tmp_1_0.adminOrUser));\n    }\n  },\n  directives: [i6.NavbarComponent, i7.NgIf, i8.AdminPanelComponent, i7.NgForOf, i9.TransactionsTableComponent, i10.BlockViewComponent],\n  pipes: [i7.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJibG9ja2NoYWluLXZpZXdlci5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\Lina.Lumburovska\\Desktop\\workspace\\evoting\\angular-frontend\\src\\app\\pages\\blockchain-viewer\\blockchain-viewer.component.ts","C:\\Users\\Lina.Lumburovska\\Desktop\\workspace\\evoting\\angular-frontend\\src\\app\\pages\\blockchain-viewer\\blockchain-viewer.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../models/user.interface\";\nimport {Observable} from \"rxjs\";\nimport {BlockchainService} from \"../../services/blockchain.service\";\nimport {Block} from \"../../models/block.interface\";\nimport {Candidate} from \"../../models/candidate.interface\";\nimport {CandidateService} from \"../../services/candidate.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-blockchain-viewer',\n  templateUrl: './blockchain-viewer.component.html',\n  styleUrls: ['./blockchain-viewer.component.scss']\n})\nexport class BlockchainViewerComponent implements OnInit {\n\n  user$: Observable<User>;\n  candidates: Candidate[] = [];\n  candidateName: string;\n  public blocks: Block[];\n  public selectedBlock: any = null;\n\n  constructor(private userService: UserService, private blockchainService: BlockchainService,\n              private candidateService: CandidateService, private modalService: NgbModal,\n              private router: Router\n  ) {\n    this.user$ = this.userService.findLoggedInUser();\n    this.blocks = this.blockchainService.getBlocks();\n    this.candidateService.getAllCandidates().subscribe(candidates => {\n      this.candidates = candidates;\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedBlock = this.blocks[0];\n  }\n\n  showTransactions(block: any) {\n    this.selectedBlock = block\n  }\n\n  open(content: any, name: any) {\n    this.candidateName = name;\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n    });\n  }\n\n  saveVote() {\n    this.router.navigate(['/new/transaction'], { queryParams: { candidate: this.candidateName }});\n    this.close();\n  }\n\n  close() {\n    this.modalService.dismissAll();\n  }\n}\n","<app-navbar></app-navbar>\n\n<!-- IF TRUE ADMIN ELSE USER -->\n<div *ngIf=\"(user$ | async)?.adminOrUser\">\n  <app-admin-panel></app-admin-panel>\n</div>\n\n<div *ngIf=\"!(user$ | async)?.adminOrUser\">\n  <div class=\"container\">\n    <h1>User Panel</h1>\n\n<!--    <div *ngIf=\"voteFinished != 'true'\">-->\n      <p>Please select your vote. The active candidates are:</p>\n      <table class=\"table table-hover table-striped\" *ngIf=\"candidates.length > 0\">\n        <thead>\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Vote</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let c of candidates\">\n            <td>\n              <span>{{ c.name }}</span>\n            </td>\n            <td class=\"link\" (click)=\"open(mymodal, c.name)\">\n              <button class=\"btn btn-primary mt-2 mb-2\">Vote</button>\n            </td>\n          </tr>\n          </tbody>\n      </table>\n\n<!--    </div>-->\n\n<!--    <div *ngIf=\"voteFinished == 'true'\">-->\n<!--      <p class=\"important\">Selected candidate: <strong>{{ selectedCandidate }}</strong>. Thank you for voting!</p>-->\n<!--    </div>-->\n\n    <h5>Blocks in the e-voting system</h5>\n    <p>When your voting is successful, your vote will be added as a new block in the e-voting system.</p>\n    <app-block-view *ngFor=\"let block of blocks\" [block]=\"block\" (click)=\"showTransactions(block)\">\n    </app-block-view>\n\n  </div>\n\n  <br>\n\n  <div class=\"container\">\n    <h5>Transactions inside block </h5>\n    <app-transactions-table [transactions]=\"selectedBlock.transactions\">\n\n    </app-transactions-table>\n  </div>\n\n  <ng-template #mymodal let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Confirm vote</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"  data-bs-dismiss=\"modal\">\n        <span aria-hidden=\"true\">×</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        Are you sure you want to confirm your vote for <strong>{{ this.candidateName }}</strong> ?\n      </div>\n\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"saveVote()\">Confirm</button>\n    </div>\n  </ng-template>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}